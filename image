#!/bin/bash

MODE=""
ARCH=""
NODE="12.14.1"
CONNECT="false"
DOCKER="false"

usage()
{
    echo ""
    echo "help: image [command] [-n | --node tag] [-c | --container]"
    echo "    Display information about builtin commands."
    echo ""
    echo "    This is used to build the HOOBS SD card images."
    echo ""
    echo "    Note:"
    echo "        This script requires elevated permissions, please run this with"
    echo "        SUDO or ROOT privileges."
    echo ""
    echo "    Commands:"
    echo "        build                    builds stable architectures"
    echo "        build armv7l             builds the armv7l architecture"
    echo "        build armv6l             builds the armv6l architecture"
    echo "        build connect            builds the hoobs connect interface"
    echo "        clean                    cleans the work and deploy directories"
    echo ""
    echo "    Options:"
    echo "        -c, --container          build using a docker container"
    echo "        -n, --node [tag]         node version tag"
    echo "        -h, --help               displays this help menu"
    echo ""
    echo "    Returns:"
    echo "        Returns success unless the install fails."
    echo ""
}

line()
{
    echo "--------------------------------------------------------------------------------------------------------------------------"
}

while [ "$1" != "" ]; do
    case $1 in
        build )             MODE="build"
                            ;;

        clean )             MODE="clean"
                            ;;

        armv7l )            ARCH="armv7l"
                            ;;

        armv6l )            ARCH="armv6l"
                            ;;

        connect )           CONNECT="true"
                            ;;

        -n | --node )       shift
                            NODE=$1
                            ;;

        -c | --container)   DOCKER="true"
                            ;;

        -h | --help )       usage
                            exit
                            ;;

        * )                 usage
                            exit
    esac

    shift
done

case $MODE in
    "build" )   if [[ "$CONNECT" = "true" ]]; then
                    if [[ -f "../hoobs-connect/.gitignore" ]]; then
                        cd ../hoobs-connect/

                        rm -f ./builds/wifi-connect-hoobs.tar.gz
                        cp -R ./ui ./builds/
                        cd ./builds/
                        tar -cvzf ui.tar.gz ./ui/*
                        mkdir ./wifi-connect-hoobs
                        mv ./ui ./wifi-connect-hoobs/
                        mv ./ui.tar.gz ./wifi-connect-hoobs/
                        tar -cvzf wifi-connect-hoobs.tar.gz ./wifi-connect-hoobs/*
                        chmod 755 ./wifi-connect-hoobs.tar.gz
                        rm -fR ./wifi-connect-hoobs
                    else
                        echo "You need to clone the \"hoobs-connect\" repository at the same level as \"hoobs-core\"."
                        echo "Run these commands."
                        echo "    cd ../"
                        echo "    git clone https://github.com/hoobs-org/hoobs-connect.git"
                    fi
                else
                    case $ARCH in
                        "armv7l" )  echo ""
                                    echo "Fetching Updates"
                                    line

                                    git pull

                                    line
                                    echo ""
                                    echo "Building $NODE ARM V7"
                                    line

                                    case $NODE in
                                        "10.18.0")  if [[ "$DOCKER" = "true" ]]; then
                                                        ./build-docker.sh -c armv7l101800
                                                    else
                                                        sudo ./build.sh -c armv7l101800
                                                    fi

                                                    ;;

                                        "12.14.1")  if [[ "$DOCKER" = "true" ]]; then
                                                        ./build-docker.sh -c armv7l121401
                                                    else
                                                        sudo ./build.sh -c armv7l121401
                                                    fi

                                                    ;;

                                        "13.6.0")   if [[ "$DOCKER" = "true" ]]; then
                                                        ./build-docker.sh -c armv7l130600
                                                    else
                                                        sudo ./build.sh -c armv7l130600
                                                    fi

                                                    ;;

                                        * )         echo "Node $NODE is not available for ARM 7"
                                                    ;;
                                    esac

                                    line
                                    echo ""
                                    ;;

                        "armv6l" )  echo ""
                                    echo "Fetching Updates"
                                    line

                                    git pull

                                    line
                                    echo ""
                                    echo "Building $NODE ARM V6"
                                    line

                                    case $NODE in
                                        "10.18.0")  if [[ "$DOCKER" = "true" ]]; then
                                                        ./build-docker.sh -c armv6l101800
                                                    else
                                                        sudo ./build.sh -c armv6l101800
                                                    fi

                                                    ;;

                                        "12.14.1")  if [[ "$DOCKER" = "true" ]]; then
                                                        ./build-docker.sh -c armv6l121401
                                                    else
                                                        sudo ./build.sh -c armv6l121401
                                                    fi

                                                    ;;

                                        "13.6.0")   if [[ "$DOCKER" = "true" ]]; then
                                                        ./build-docker.sh -c armv6l130600
                                                    else
                                                        sudo ./build.sh -c armv6l130600
                                                    fi

                                                    ;;

                                        * )         echo "Node $NODE is not available for ARM 6"
                                                    ;;
                                    esac

                                    line
                                    echo ""
                                    ;;

                        * )         echo ""
                                    echo "Fetching Updates"
                                    line

                                    git pull

                                    line
                                    echo ""
                                    echo "Building 12.14.1 ARM V7"
                                    line

                                    if [[ "$DOCKER" = "true" ]]; then
                                        ./build-docker.sh -c armv7l121401
                                    else
                                        sudo ./build.sh -c armv7l121401
                                    fi

                                    line
                                    echo ""
                                    echo "Building 12.14.1 ARM V6"

                                    if [[ "$DOCKER" = "true" ]]; then
                                        ./build-docker.sh -c armv6l121401
                                    else
                                        sudo ./build.sh -c armv6l121401
                                    fi

                                    line
                                    echo ""
                                    ;;
                    esac
                fi

                ;;

    "clean" )   echo ""
                echo "Cleaning Builds"
                line
                echo "Removing work directory"

                rm -fR ./work

                echo "Removing deploy directory"

                rm -fR ./deploy

                line
                echo ""
                ;;

    * )         usage
                ;;
esac
